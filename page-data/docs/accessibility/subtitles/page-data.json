{"componentChunkName":"component---src-templates-post-template-js","path":"/docs/accessibility/subtitles","webpackCompilationHash":"d0128922136ae7e92cc6","result":{"data":{"markdownRemark":{"fields":{"slug":"/docs/accessibility/subtitles"},"id":"bc7e4389-51db-5ce1-9880-3b7ea2799a55","html":"<h2 id=\"audio\"><a href=\"#audio\" aria-label=\"audio permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Audio</h2>\n<h3 id=\"standard-audio-template\"><a href=\"#standard-audio-template\" aria-label=\"standard audio template permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Standard Audio Template</h3>\n<p>This defines a \"standard audio interface\" which is subject to change. </p>\n<p>Right now, there are three separate sound configs, one for background music, sound effects, and sounds that have subtitles.</p>\n<p><code class=\"language-text\">IBaseAudioTracks</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IBaseAudioTracks</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// music track - any background or gameplay music</span>\n    backgroundMusicTrack <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Sound<span class=\"token punctuation\">.</span>BaseSound<span class=\"token punctuation\">;</span>\n    readonly defaultBgMusicOptions <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Types<span class=\"token punctuation\">.</span>Sound<span class=\"token punctuation\">.</span>SoundConfig<span class=\"token punctuation\">;</span>\n    sfxOptions <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Types<span class=\"token punctuation\">.</span>Sound<span class=\"token punctuation\">.</span>SoundConfig<span class=\"token punctuation\">;</span>\n    subtitleOptions <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Types<span class=\"token punctuation\">.</span>Sound<span class=\"token punctuation\">.</span>SoundConfig<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// sfx track - any sound effects that aren't words that require subtitles</span>\n    <span class=\"token function\">playSoundEffect</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Sound<span class=\"token punctuation\">.</span>BaseSound<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">playSubtitle</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Sound<span class=\"token punctuation\">.</span>BaseSound<span class=\"token punctuation\">;</span>\n\n    subtitleContainer <span class=\"token operator\">:</span> SubtitleContainer<span class=\"token punctuation\">;</span>\n    subtitleDictionary <span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The idea is to save these configs so that any time you play a sound effect or subtitle you use the current config, and that config is changeable by the user in some options menu.</p>\n<p>In this case, the <code class=\"language-text\">playSubtitle</code> would require this.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// in phaser scene</span>\n    <span class=\"token function\">playSubtitle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key <span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> sound <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sfxOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"subtitles\"><a href=\"#subtitles\" aria-label=\"subtitles permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subtitles</h2>\n<p>We want any access to any audio clip that requires a subtitle in a globally accessible subtitle manager. This manager will play the sound and the associated subtitle on the screen above all rendered scenes.</p>\n<h2 id=\"classes\"><a href=\"#classes\" aria-label=\"classes permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Classes</h2>\n<h3 id=\"subtitle-container\"><a href=\"#subtitle-container\" aria-label=\"subtitle container permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subtitle Container</h3>\n<p>This is a container we can use to pass in Phaser Text objects and have the container stack them up for multiple lines of subtitles.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// in a phaser scene</span>\n    <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subtitleContainer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SubtitleContainer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">playSubtitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'correct'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">playSubtitle</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Sound<span class=\"token punctuation\">.</span>BaseSound <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> subtitleTrack <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subtitleOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        subtitleTrack<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subtitleDictionary<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            color <span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n            fontSize<span class=\"token operator\">:</span><span class=\"token string\">'24px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        text<span class=\"token punctuation\">.</span><span class=\"token function\">setOrigin</span><span class=\"token punctuation\">(</span><span class=\"token number\">.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subtitleContainer<span class=\"token punctuation\">.</span><span class=\"token function\">addSubtitle</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> subtitleTrack<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"subtitle-manager\"><a href=\"#subtitle-manager\" aria-label=\"subtitle manager permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subtitle Manager</h3>\n<p>This manager inherits from Phaser's Plugin System and must be initialized in the <code class=\"language-text\">game.ts</code> configuration. This subtitle exists globally, so any scene has the same subtitle management system.</p>\n<p>Class Description</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SubtitleManager</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// our main dictionary, it maps a mp3 key with a subtitle string</span>\n    <span class=\"token comment\">// example: (\"goodWork.mp3\", \"Good Work!\")</span>\n    subtitleDictionary <span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// after we load our assets, we need to initialize the dictionary </span>\n    <span class=\"token comment\">// we currently do this in our base EDU scene's constructor.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">initializeSubtitlesFromAudio</span><span class=\"token punctuation\">(</span>dict <span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// takes in any phaser scene, and adds a subtitle</span>\n    <span class=\"token comment\">// this phaser scene needs a \"subtitleContainer\"</span>\n    <span class=\"token function\">addSubtitle</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// creates a sound instance in the scene</span>\n    <span class=\"token comment\">// plays the audio, and adds the subtitle</span>\n    <span class=\"token function\">playAudio</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":null,"title":"Subtitles","sidebar":"Docs","showTitle":true,"hideAnchor":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}