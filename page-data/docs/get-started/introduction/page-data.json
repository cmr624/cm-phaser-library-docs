{"componentChunkName":"component---src-templates-post-template-js","path":"/docs/get-started/introduction","webpackCompilationHash":"334bb52cadc4f6227360","result":{"data":{"markdownRemark":{"fields":{"slug":"/docs/get-started/introduction"},"id":"946dcfb4-d80d-5f52-a27c-f95c56ab9d13","html":"<h2 id=\"overview\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h2>\n<p>CM-Phaser-Library is an open source, accessible Phaser 3 library built in Typescript.</p>\n<p>Click <a href=\"quick-start\">here</a> to start developing.</p>\n<p>Click <a href=\"contribute\">here</a> to learn how to contribute either to the docs or the library itself.</p>\n<h2 id=\"code-examples\"><a href=\"#code-examples\" aria-label=\"code examples permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code Examples</h2>\n<h3 id=\"importing-objects-from-the-library\"><a href=\"#importing-objects-from-the-library\" aria-label=\"importing objects from the library permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Importing objects from the library</h3>\n<p>In any Phaser scene, you can import any of the exported objects from the library.</p>\n<h4 id=\"example--standardkeyboardinput\"><a href=\"#example--standardkeyboardinput\" aria-label=\"example  standardkeyboardinput permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example : StandardKeyboardInput</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>StandardKeyboardInput<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'cm-phaser-library/src/input/standard.ts'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyScene</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Phaser<span class=\"token punctuation\">.</span>Scene</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// a reference for our scene for keys. here we can call our keyboard controls</span>\n    keys <span class=\"token operator\">:</span> StandardKeyboardInput<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myScene'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Standard Keyboard Input takes in a \"scene\" parameter, which in this context</span>\n        <span class=\"token comment\">// is 'this', which is the current scene (MyScene)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keys <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StandardKeyboardInput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// example usage</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">.</span><span class=\"token function\">upPressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            player<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token string\">'up'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"example--default-text\"><a href=\"#example--default-text\" aria-label=\"example  default text permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example : Default Text</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>defaultText<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'cm-phaser-library/scr/objects/textStyles.ts'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MainScene</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Phaser<span class=\"token punctuation\">.</span>Scene</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mainScene'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// we use the text style we imported from the library</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello, world'</span><span class=\"token punctuation\">,</span> defaultText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"inheriting-from-classes\"><a href=\"#inheriting-from-classes\" aria-label=\"inheriting from classes permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inheriting from classes</h3>\n<p>You can also inherit from custom classes. We can look at a trivial example with the \"BaseSprite\" class.</p>\n<p>The \"BaseSprite\" class basically stores a reference to the current scene the sprite is in, and adds itself to the scene.</p>\n<h4 id=\"example--base-player-class-inherits-from-base-arcade-sprite\"><a href=\"#example--base-player-class-inherits-from-base-arcade-sprite\" aria-label=\"example  base player class inherits from base arcade sprite permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example : Base Player Class inherits from \"Base Arcade Sprite\"</h4>\n<p>This is the \"Base Player Arcade\" class which basically has a reference to our keys.</p>\n<p><em>NOTE</em> There's a difference with <code class=\"language-text\">this.scene</code> being called within a <code class=\"language-text\">BaseSprite</code>, because this references the Sprite's reference to the scene that it exists in. In the <a href=\"#example--standardkeyboardinput\">previous example</a>, we initialize the <code class=\"language-text\">StandardKeyboardInput</code> with <code class=\"language-text\">this</code> because the <code class=\"language-text\">this</code> object <em>itself</em> is the scene.</p>\n<p>This sometimes becomes confusing, because when your <code class=\"language-text\">this</code> object <em>is</em> an actual scene, there's a property on that object called <code class=\"language-text\">this.scene</code> which references <a href=\"https://photonstorm.github.io/phaser3-docs/Phaser.Scenes.SceneManager.html\">Phaser's scene manager</a>, which is a different object.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseArcadeSprite <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./../base'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * BasePlayerArcade\n * @classdesc Base Arcade \"Player\" which basically is just the base arcade sprite with a reference to the keys\n * @property {StandardKeyboardInput} keys\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BasePlayerArcade</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseArcadeSprite</span> <span class=\"token punctuation\">{</span>\n    keys <span class=\"token operator\">:</span> StandardKeyboardInput<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scene <span class=\"token operator\">:</span> Phaser<span class=\"token punctuation\">.</span>Scene<span class=\"token punctuation\">,</span> x <span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> y <span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> key <span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>keys <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StandardKeyboardInput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"goals\"><a href=\"#goals\" aria-label=\"goals permalink\" class=\"post-toc-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Goals</h2>\n<ol>\n<li>Build high quality Typescript classes and interfaces using Phaser 3's API</li>\n<li>Build a modular accessibility framework based on WCAG 2.1 guidelines for \"education\"-style games, such as quiz games or trivia games.</li>\n</ol>","frontmatter":{"date":null,"title":"Introduction","sidebar":"Docs","showTitle":true,"hideAnchor":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}