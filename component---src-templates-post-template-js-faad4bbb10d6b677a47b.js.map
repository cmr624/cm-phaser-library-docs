{"version":3,"sources":["webpack:///./src/templates/postTemplate.js"],"names":["mapDispatchToProps","onSidebarContentSelected","onSetSidebarContentEntry","onSetAnchorHide","onSetSidebarHide","connect","state","selectedKey","getSidebarSelectedKey","sidebarEntry","getSidebarEntry","data","markdownRemark","frontmatter","html","id","hideAnchor","hideSidebar","sidebar","onPostPage","className","showTitle","align","title","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"0FAAA,+GAiDA,IAOMA,EAAqB,CACzBC,6BACAC,6BACAC,oBACAC,sBAGaC,uBAdS,SAACC,GACvB,MAAO,CACLC,YAAaC,YAAsBF,GACnCG,aAAcC,YAAgBJ,MAWMN,EAAzBK,EAlDf,YAQI,IAPFM,EAOC,EAPDA,KACAV,EAMC,EANDA,yBACAM,EAKC,EALDA,YACAL,EAIC,EAJDA,yBACAO,EAGC,EAHDA,aACAN,EAEC,EAFDA,gBACAC,EACC,EADDA,iBAEQQ,EAAmBD,EAAnBC,eACAC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,KAAMC,EAAOH,EAAPG,GAErBC,EAAyC,OAA3BH,EAAYG,YAA+BH,EAAYG,WACrEC,EAAuC,OAAxBJ,EAAYK,QAQjC,OANAf,EAAgBa,GAChBZ,EAAiBa,GAEbV,IAAgBQ,GAAId,EAAyBc,GAC7CN,IAAiBI,EAAYK,SAAShB,EAAyBW,EAAYK,SAG7E,kBAAC,IAAD,CAAQC,YAAY,GACpB,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACXP,EAAYQ,WAAa,wBAAIC,MAAM,UAAUT,EAAYU,OAC3D,yBACEH,UAAU,oBACVI,wBAAyB,CAAEC,OAAQX,WAwBtC,IAAMY,EAAS","file":"component---src-templates-post-template-js-faad4bbb10d6b677a47b.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\";\r\nimport { connect } from 'react-redux'\r\nimport \"katex/dist/katex.min.css\"\r\nimport {\r\n  onSidebarContentSelected,\r\n  onSetSidebarContentEntry,\r\n  onSetAnchorHide,\r\n  onSetSidebarHide,\r\n} from '../actions/layout'\r\nimport { getSidebarSelectedKey, getSidebarEntry } from \"../store/selectors\";\r\n\r\nfunction Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  onSidebarContentSelected,\r\n  selectedKey,\r\n  onSetSidebarContentEntry,\r\n  sidebarEntry,\r\n  onSetAnchorHide,\r\n  onSetSidebarHide\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds our post data\r\n  const { frontmatter, html, id } = markdownRemark\r\n\r\n  const hideAnchor = (frontmatter.hideAnchor === null) ? false : frontmatter.hideAnchor\r\n  const hideSidebar = (frontmatter.sidebar === null) ? true : false\r\n\r\n  onSetAnchorHide(hideAnchor)\r\n  onSetSidebarHide(hideSidebar)\r\n\r\n  if (selectedKey !== id) onSidebarContentSelected(id)\r\n  if (sidebarEntry !== frontmatter.sidebar) onSetSidebarContentEntry(frontmatter.sidebar)\r\n\r\n  return (\r\n    <Layout onPostPage={true}>\r\n    <div className=\"blog-post-container\">\r\n      <div className=\"blog-post\">\r\n        { frontmatter.showTitle && <h1 align=\"center\">{frontmatter.title}</h1> }\r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n      </div>\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedKey: getSidebarSelectedKey(state),\r\n    sidebarEntry: getSidebarEntry(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSidebarContentSelected,\r\n  onSetSidebarContentEntry,\r\n  onSetAnchorHide,\r\n  onSetSidebarHide\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Template)\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(fields: { slug: { eq: $path} }) {\r\n      fields {\r\n        slug\r\n      }\r\n      id\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        sidebar\r\n        showTitle\r\n        hideAnchor\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}